---
# Whether to configure the project application code.
# Allows skipping the code tasks if only the database
# tasks should be run, which is useful in a multi-host setup.
fpsd_crawler_configure_service: true

# General system dependencies requiring for running
# Tor Browser Bundle (tbb).
fpsd_crawler_apt_packages:
  - aptitude # needed by Ansible for apt 'upgrade'
  - git #tbs
  - golang # go-knn
  - gnupg-curl # needed for tls keyservers
  - libasound2 # tbb (firefox)
  - libdbus-glib-1-2 # tbb (firefox)
  - libfontconfig1 # tbb (firefox)
  - libgtk2.0-0 # tbb (firefox)
  - libpq-dev # needed to install psycopg2
  - libxrender1 # tbb (firefox)
  - python3-pip
  - python3.5
  - tmux
  - vim
  - xvfb # tbs

# General Python tooling for development. Specific Python dependencies
# for the crawler code are installed from `requirements.txt` files.
fpsd_crawler_pypi_packages:
  - pip
  - pytest
  - ipython
  - ipdb

# Specify TBB version to download and install
fpsd_crawler_tbb_release: 6.5
fpsd_crawler_tbb_locale: en-US
fpsd_crawler_tbb_arch: 64
fpsd_crawler_tbb_directory: "/opt/tbb"
fpsd_tbb_signing_key: EF6E286DDA85EA2A4BA7DE684E2C6E8793298290

# Specify Tor version to download, patch, build, and install
fpsd_crawler_tor_release: 0.2.9.9
fpsd_crawler_tor_directory: "/usr/local/src/tor"
fpsd_tor_signing_key: 2133BC600AB133E1D826D173FE43009C4607B1FB

# TLS-secured PGP keyserver
fpsd_keyserver: "hkps://keyserver.cns.vt.edu"

# Set GOPATH and Wa-kNN Go repo path.
fpsd_gopath: "/usr/local/go"
# Note Go always uses HTTPS, throws errors if you specify it
fpsd_wa_knn_repo: "github.com/fowlslegs/go-knn"

# Clone the git repo by default, but allow disabling, e.g. in vagrant,
# where it can be mounted in.
fpsd_crawler_clone_git_repo: true
fpsd_crawler_project_directory: "/opt/fingerprint-securedrop"
fpsd_crawler_git_repo_url: "https://github.com/freedomofpress/fingerprint-securedrop"

# Username for running the crawler systemd service.
fpsd_crawler_system_account: fpsd

# Configuration options for Postgres database.
fpsd_database_apt_packages:
  - postgresql
  - postgresql-contrib
  - libpq-dev
  - python-psycopg2

# List of hidden service directories to sort
fpsd_onion_dirs:
  - http://secrdrop5wyphb5x.onion/sites/securedrop.org/files/securedrop_list.txt
  - http://msydqstlz2kzerdg.onion/address/
  - http://skunksworkedp2cg.onion/sites.html

# List of preferred EntryNodes. Tor will make the first sequentially listed one
# reachable the client guard.
fpsd_entry_nodes:
  - 237C733E2D1BAD26FAABEAFB612BDA0CD3BC6AF4
  - 95CDFAA852FF075FCD23102C06636F2B84B3371A
  - E727D0B4179549BB3F82ED3C256F209E54CE0B23
  - 41E2FB97690EED79DD4BD6BAC00A974B69F49858

# If left undefined, a randomly generated password will be created and written
# to /tmp on the Ansible controller.
fpsd_database_password: "{{ lookup('password', '/tmp/passwordfile chars=ascii_letters,digits') }}"

# All of these vars except password will be set as environment variables in
# `/etc/bash.bashrc`. If password is not set, then Ansible will generate one for
# you at provision-time. The password will not be set as an environment
# variable, but is instead saved to a PGPASSFILE, `~{{ ssh_username }}/.pgpass`,
# along with the corresponding information from the other vars according to the
# PGPASSFILE spec.
#
# Note: the database role will not overwrite an existing PGPASSFILE, so in order
# to do so, you'll have to first remove it then re-run the role:
# `ANSIBLE_ARGS="--tags=database vagrant provision"`.
fpsd_database_psql_env:
  PGHOST: localhost
  PGUSER: fp_user
  PGPORT: "5432"
  PGDATABASE: fpsd
  PGPASSWORD: "{{ fpsd_database_password }}"

# Defaults to true. Set to false if you want to use a remote database. If you
# wish not to use the database at all, set the environment variable
# `ANSIBLE_ARGS="--skip-tags=database"`. If set to false you must fill out all
# vars in the field below so Ansible can still set the appropriate environment
# variables and create the PGPASSFILE for it just worksâ„¢ access to your remote
# database.
fpsd_database_initialize_local_db: true

# Whether to configure credentials for user accounts.
fpsd_database_configure_credentials: true
fpsd_database_usernames:
  - "{{ ansible_user|default(ansible_ssh_user|default(lookup('env', 'USER'))) }}"
